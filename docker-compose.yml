version: "3.3"
services:
  mongo0:
    hostname: mongo0
    container_name: mongo0
    image: mongo
    ports:
      - "27017:27017"
    command: /usr/bin/mongod --bind_ip_all --replSet rs0 --shardsvr --port 27017
    networks:
      - backend
  mongo1:
    hostname: mongo1
    container_name: mongo1
    image: mongo
    ports:
      - "27018:27017"
    command: /usr/bin/mongod --bind_ip_all --replSet rs0 --shardsvr --port 27017
    networks:
      - backend
  mongo2:
    hostname: mongo2
    container_name: mongo2
    image: mongo
    ports:
      - "27019:27017"
    command: /usr/bin/mongod --bind_ip_all --replSet rs0 --shardsvr --port 27017
    networks:
      - backend
  mongo-rs0-setup:
    container_name: mongo-rs0-setup
    image: mongo
    ports:
      - "27020:27017"
    entrypoint: ["./mongo-rs0-setup.sh"]
    volumes:
      - ./mongo-rs0-setup.sh:/mongo-rs0-setup.sh
    links:
      - mongo0
      - mongo1
      - mongo2
    depends_on:
      - mongo0
      - mongo1
      - mongo2
    networks:
      - backend
  nats:
    container_name: nats
    image: nats
    ports:
      - "4222:4222"
    networks:
      - backend
  rest-api:
    container_name: rest-api
    restart: always
    build: ./src/rest-api
    hostname: rest-api
    ports:
      - 7000:7000
    volumes:
      - ./src/rest-api:/rest-api
    links:
      - mongo0
    networks:
      - backend
  stream:
    container_name: stream
    restart: always
    build: ./src/stream
    hostname: stream
    ports:
      - 4000:4000
    volumes:
      - ./src/stream:/stream
    links:
      - mongo0
    depends_on:
      - nats
    networks:
      - backend
  websocket:
    container_name: websocket
    restart: always
    build: ./src/webSocket-api
    hostname: websocket
    ports:
      - 5000:5000
    volumes:
      - ./src/webSocket-api:/websocket
    links:
      - mongo0
    networks:
      - backend

networks:
  backend: